{"remainingRequest":"D:\\Project\\Java\\Springboot_Vue_Mall\\vue\\end\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\Project\\Java\\Springboot_Vue_Mall\\vue\\end\\src\\views\\Register.vue?vue&type=style&index=0&id=63ae9146&lang=css","dependencies":[{"path":"D:\\Project\\Java\\Springboot_Vue_Mall\\vue\\end\\src\\views\\Register.vue","mtime":1710760421800},{"path":"D:\\Project\\Java\\Springboot_Vue_Mall\\vue\\end\\node_modules\\css-loader\\dist\\cjs.js","mtime":1708869952464},{"path":"D:\\Project\\Java\\Springboot_Vue_Mall\\vue\\end\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Project\\Java\\Springboot_Vue_Mall\\vue\\end\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Project\\Java\\Springboot_Vue_Mall\\vue\\end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1708869950964},{"path":"D:\\Project\\Java\\Springboot_Vue_Mall\\vue\\end\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoNCi5kZW1vLXJ1bGVGb3JtIHsNCiAgICAgICAgbWF4LXdpZHRoOiA1MDBweDsNCiAgICAgICAgbWFyZ2luOiAwIGF1dG87DQogICAgfQ0K"},{"version":3,"sources":["D:\\Project\\Java\\Springboot_Vue_Mall\\vue\\end\\src\\views\\Register.vue"],"names":[],"mappings":";;AAkGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClB","file":"D:/Project/Java/Springboot_Vue_Mall/vue/end/src/views/Register.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div>\r\n        <el-container>\r\n            <el-header>\r\n            </el-header>\r\n            <el-main>\r\n                <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\"\r\n                    class=\"demo-ruleForm\">\r\n                    <el-form-item prop=\"username\">\r\n                        <el-input prefix-icon=\"el-icon-user\" v-model=\"ruleForm.username\" placeholder=\"用户名\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item prop=\"password\">\r\n                        <el-input prefix-icon=\"el-icon-lock\" v-model=\"ruleForm.password\" placeholder=\"密码\" show-password></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item prop=\"confirm\">\r\n                        <el-input prefix-icon=\"el-icon-lock\" v-model=\"ruleForm.confirm\" placeholder=\"确认密码\" show-password></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item>\r\n                        <el-button type=\"primary\" @click=\"register\">注册</el-button>\r\n                        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </el-main>\r\n        </el-container>\r\n    </div>\r\n</template>\r\n<script>\r\nimport request from \"@/utils/request.js\"\r\nimport { ElMessage } from 'element-plus'\r\n    export default {\r\n        name: 'Register',\r\n        data() {\r\n\r\n            return {\r\n                ruleForm: {\r\n                  role:2\r\n                },\r\n                rules: {\r\n                    username: [\r\n                        { required: true, message: '请输入用户名', trigger: 'blur' },\r\n                    ],\r\n                    password: [\r\n                        { required: true, message: '请输入密码', trigger: 'blur' },\r\n                    ],\r\n                    confirm: [\r\n                        { required: true, message: '请输入确认密码', trigger: 'blur' },\r\n                    ],\r\n\r\n                }\r\n            };\r\n        },\r\n        methods: {\r\n            register() {\r\n                if (this.ruleForm.password !== this.ruleForm.confirm) {\r\n                    ElMessage({\r\n                        type: 'error',\r\n                        message: '两次密码输入不一致',\r\n                    })\r\n                    return\r\n                }\r\n                this.$refs['ruleForm'].validate((valid) => {\r\n                    if (valid) {\r\n                        request.post('/register',this.ruleForm).then(res => {\r\n                          console.log(res);\r\n                            if (res.code === 200) {\r\n                                ElMessage({\r\n                                    type: 'success',\r\n                                    message: '注册成功',\r\n                                })\r\n                                this.$router.push(\"/login\")\r\n                            } else {\r\n                                ElMessage({\r\n                                    type: 'error',\r\n                                    message: res.msg,\r\n                                })\r\n                              this.$router.push(\"/register\")\r\n                            }\r\n                        })\r\n\r\n                    } else {\r\n                        console.log('error submit!!');\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n            },\r\n            resetForm(formName) {\r\n                this.$refs[formName].resetFields();\r\n            }\r\n\r\n        },\r\n        mounted() {\r\n\r\n        }\r\n    }\r\n</script>\r\n<style>\r\n\r\n.demo-ruleForm {\r\n        max-width: 500px;\r\n        margin: 0 auto;\r\n    }\r\n</style>"]}]}